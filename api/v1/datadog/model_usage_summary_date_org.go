/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package datadog

import (
	"encoding/json"
)

// UsageSummaryDateOrg Global hourly report of all data billed by Datadog for a given organization.
type UsageSummaryDateOrg struct {
	// Shows the 99th percentile of all agent hosts over all hours in the current date for the given org.
	AgentHostTop99p NullableInt64 `json:"agent_host_top99p,omitempty"`
	// Shows the 99th percentile of all Azure app services using APM over all hours in the current date for the given org.
	ApmAzureAppServiceHostTop99p NullableInt64 `json:"apm_azure_app_service_host_top99p,omitempty"`
	// Shows the 99th percentile of all distinct APM hosts over all hours in the current date for the given org.
	ApmHostTop99p NullableInt64 `json:"apm_host_top99p,omitempty"`
	// Shows the 99th percentile of all AWS hosts over all hours in the current date for the given org.
	AwsHostTop99p NullableInt64 `json:"aws_host_top99p,omitempty"`
	// Shows the sum of all AWS Lambda invocations over all hours in the current date for the given org.
	AwsLambdaFuncCount NullableInt64 `json:"aws_lambda_func_count,omitempty"`
	// Shows the sum of all AWS Lambda invocations over all hours in the current date for the given org.
	AwsLambdaInvocationsSum NullableInt64 `json:"aws_lambda_invocations_sum,omitempty"`
	// Shows the 99th percentile of all Azure app services over all hours in the current date for the given org.
	AzureAppServiceTop99p NullableInt64 `json:"azure_app_service_top99p,omitempty"`
	// Shows the sum of all log bytes ingested over all hours in the current date for the given org.
	BillableIngestedBytesSum NullableInt64 `json:"billable_ingested_bytes_sum,omitempty"`
	// Shows the sum of all compliance containers over all hours in the current date for the given org.
	ComplianceContainerAggSum NullableInt64 `json:"compliance_container_agg_sum,omitempty"`
	// Shows the sum of all compliance hosts over all hours in the current date for the given org.
	ComplianceHostAggSum NullableInt64 `json:"compliance_host_agg_sum,omitempty"`
	// Shows the average of all distinct containers over all hours in the current date for the given org.
	ContainerAvg NullableInt64 `json:"container_avg,omitempty"`
	// Shows the high-water mark of all distinct containers over all hours in the current date for the given org.
	ContainerHwm NullableInt64 `json:"container_hwm,omitempty"`
	// Shows the average number of distinct custom metrics over all hours in the current date for the given org.
	CustomTsAvg NullableInt64 `json:"custom_ts_avg,omitempty"`
	// The average task count for Fargate.
	FargateTasksCountAvg NullableInt64 `json:"fargate_tasks_count_avg,omitempty"`
	// Shows the high-water mark of all Fargate tasks over all hours in the current date for the given org.
	FargateTasksCountHwm NullableInt64 `json:"fargate_tasks_count_hwm,omitempty"`
	// Shows the 99th percentile of all GCP hosts over all hours in the current date for the given org.
	GcpHostTop99p NullableInt64 `json:"gcp_host_top99p,omitempty"`
	// Shows the 99th percentile of all Heroku dynos over all hours in the current date for the given org.
	HerokuHostTop99p NullableInt64 `json:"heroku_host_top99p,omitempty"`
	// The organization id.
	Id *string `json:"id,omitempty"`
	// Shows the high-water mark of incident management monthly active users over all hours in the current date for the given org.
	IncidentManagementMonthlyActiveUsersHwm NullableInt64 `json:"incident_management_monthly_active_users_hwm,omitempty"`
	// Shows the sum of all log events indexed over all hours in the current date for the given org.
	IndexedEventsCountSum NullableInt64 `json:"indexed_events_count_sum,omitempty"`
	// Shows the 99th percentile of all distinct infrastructure hosts over all hours in the current date for the given org.
	InfraHostTop99p NullableInt64 `json:"infra_host_top99p,omitempty"`
	// Shows the sum of all log bytes ingested over all hours in the current date for the given org.
	IngestedEventsBytesSum NullableInt64 `json:"ingested_events_bytes_sum,omitempty"`
	// Shows the sum of all IoT devices over all hours in the current date for the given org.
	IotDeviceAggSum NullableInt64 `json:"iot_device_agg_sum,omitempty"`
	// Shows the 99th percentile of all IoT devices over all hours in the current date for the given org.
	IotDeviceTop99pSum NullableInt64 `json:"iot_device_top99p_sum,omitempty"`
	// Shows the sum of all mobile RUM Sessions on Android over all hours in the current date for the given org.
	MobileRumSessionCountAndroidSum NullableInt64 `json:"mobile_rum_session_count_android_sum,omitempty"`
	// Shows the sum of all mobile RUM Sessions on iOS over all hours in the current date for the given org.
	MobileRumSessionCountIosSum NullableInt64 `json:"mobile_rum_session_count_ios_sum,omitempty"`
	// Shows the sum of all mobile RUM Sessions over all hours in the current date for the given org.
	MobileRumSessionCountSum NullableInt64 `json:"mobile_rum_session_count_sum,omitempty"`
	// The organization name.
	Name *string `json:"name,omitempty"`
	// Shows the sum of all Network flows indexed over all hours in the current date for the given org.
	NetflowIndexedEventsCountSum NullableInt64 `json:"netflow_indexed_events_count_sum,omitempty"`
	// Shows the 99th percentile of all distinct Networks hosts over all hours in the current date for the given org.
	NpmHostTop99p NullableInt64 `json:"npm_host_top99p,omitempty"`
	// Shows the 99th percentile of all hosts reported by the Datadog exporter for the OpenTelemetry Collector over all hours in the current date for the given org.
	OpentelemetryHostTop99p NullableInt64 `json:"opentelemetry_host_top99p,omitempty"`
	// Shows the 99th percentile of all profiled hosts over all hours in the current date for the given org.
	ProfilingHostTop99p NullableInt64 `json:"profiling_host_top99p,omitempty"`
	// The organization public id.
	PublicId *string `json:"public_id,omitempty"`
	// Shows the sum of all browser RUM Sessions over all hours in the current date for the given org.
	RumSessionCountSum NullableInt64 `json:"rum_session_count_sum,omitempty"`
	// Shows the sum of RUM Sessions (browser and mobile) over all hours in the current date for the given org.
	RumTotalSessionCountSum NullableInt64 `json:"rum_total_session_count_sum,omitempty"`
	// Shows the sum of all Synthetic browser tests over all hours in the current date for the given org.
	SyntheticsBrowserCheckCallsCountSum NullableInt64 `json:"synthetics_browser_check_calls_count_sum,omitempty"`
	// Shows the sum of all Synthetic API tests over all hours in the current date for the given org.
	SyntheticsCheckCallsCountSum NullableInt64 `json:"synthetics_check_calls_count_sum,omitempty"`
	// Shows the sum of all Indexed Spans indexed over all hours in the current date for the given org.
	TraceSearchIndexedEventsCountSum NullableInt64 `json:"trace_search_indexed_events_count_sum,omitempty"`
	// Shows the sum of all tracing without limits bytes ingested over all hours in the current date for the given org.
	TwolIngestedEventsBytesSum NullableInt64 `json:"twol_ingested_events_bytes_sum,omitempty"`
	// Shows the 99th percentile of all vSphere hosts over all hours in the current date for the given org.
	VsphereHostTop99p NullableInt64 `json:"vsphere_host_top99p,omitempty"`
}

// NewUsageSummaryDateOrg instantiates a new UsageSummaryDateOrg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsageSummaryDateOrg() *UsageSummaryDateOrg {
	this := UsageSummaryDateOrg{}
	return &this
}

// NewUsageSummaryDateOrgWithDefaults instantiates a new UsageSummaryDateOrg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsageSummaryDateOrgWithDefaults() *UsageSummaryDateOrg {
	this := UsageSummaryDateOrg{}
	return &this
}

// GetAgentHostTop99p returns the AgentHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetAgentHostTop99p() int64 {
	if o == nil || o.AgentHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AgentHostTop99p.Get()
}

// GetAgentHostTop99pOk returns a tuple with the AgentHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetAgentHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgentHostTop99p.Get(), o.AgentHostTop99p.IsSet()
}

// HasAgentHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasAgentHostTop99p() bool {
	if o != nil && o.AgentHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetAgentHostTop99p gets a reference to the given NullableInt64 and assigns it to the AgentHostTop99p field.
func (o *UsageSummaryDateOrg) SetAgentHostTop99p(v int64) {
	o.AgentHostTop99p.Set(&v)
}

// SetAgentHostTop99pNil sets the value for AgentHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetAgentHostTop99pNil() {
	o.AgentHostTop99p.Set(nil)
}

// UnsetAgentHostTop99p ensures that no value is present for AgentHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetAgentHostTop99p() {
	o.AgentHostTop99p.Unset()
}

// GetApmAzureAppServiceHostTop99p returns the ApmAzureAppServiceHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetApmAzureAppServiceHostTop99p() int64 {
	if o == nil || o.ApmAzureAppServiceHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ApmAzureAppServiceHostTop99p.Get()
}

// GetApmAzureAppServiceHostTop99pOk returns a tuple with the ApmAzureAppServiceHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetApmAzureAppServiceHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApmAzureAppServiceHostTop99p.Get(), o.ApmAzureAppServiceHostTop99p.IsSet()
}

// HasApmAzureAppServiceHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasApmAzureAppServiceHostTop99p() bool {
	if o != nil && o.ApmAzureAppServiceHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetApmAzureAppServiceHostTop99p gets a reference to the given NullableInt64 and assigns it to the ApmAzureAppServiceHostTop99p field.
func (o *UsageSummaryDateOrg) SetApmAzureAppServiceHostTop99p(v int64) {
	o.ApmAzureAppServiceHostTop99p.Set(&v)
}

// SetApmAzureAppServiceHostTop99pNil sets the value for ApmAzureAppServiceHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetApmAzureAppServiceHostTop99pNil() {
	o.ApmAzureAppServiceHostTop99p.Set(nil)
}

// UnsetApmAzureAppServiceHostTop99p ensures that no value is present for ApmAzureAppServiceHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetApmAzureAppServiceHostTop99p() {
	o.ApmAzureAppServiceHostTop99p.Unset()
}

// GetApmHostTop99p returns the ApmHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetApmHostTop99p() int64 {
	if o == nil || o.ApmHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ApmHostTop99p.Get()
}

// GetApmHostTop99pOk returns a tuple with the ApmHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetApmHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApmHostTop99p.Get(), o.ApmHostTop99p.IsSet()
}

// HasApmHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasApmHostTop99p() bool {
	if o != nil && o.ApmHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetApmHostTop99p gets a reference to the given NullableInt64 and assigns it to the ApmHostTop99p field.
func (o *UsageSummaryDateOrg) SetApmHostTop99p(v int64) {
	o.ApmHostTop99p.Set(&v)
}

// SetApmHostTop99pNil sets the value for ApmHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetApmHostTop99pNil() {
	o.ApmHostTop99p.Set(nil)
}

// UnsetApmHostTop99p ensures that no value is present for ApmHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetApmHostTop99p() {
	o.ApmHostTop99p.Unset()
}

// GetAwsHostTop99p returns the AwsHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetAwsHostTop99p() int64 {
	if o == nil || o.AwsHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AwsHostTop99p.Get()
}

// GetAwsHostTop99pOk returns a tuple with the AwsHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetAwsHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsHostTop99p.Get(), o.AwsHostTop99p.IsSet()
}

// HasAwsHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasAwsHostTop99p() bool {
	if o != nil && o.AwsHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetAwsHostTop99p gets a reference to the given NullableInt64 and assigns it to the AwsHostTop99p field.
func (o *UsageSummaryDateOrg) SetAwsHostTop99p(v int64) {
	o.AwsHostTop99p.Set(&v)
}

// SetAwsHostTop99pNil sets the value for AwsHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetAwsHostTop99pNil() {
	o.AwsHostTop99p.Set(nil)
}

// UnsetAwsHostTop99p ensures that no value is present for AwsHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetAwsHostTop99p() {
	o.AwsHostTop99p.Unset()
}

// GetAwsLambdaFuncCount returns the AwsLambdaFuncCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetAwsLambdaFuncCount() int64 {
	if o == nil || o.AwsLambdaFuncCount.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AwsLambdaFuncCount.Get()
}

// GetAwsLambdaFuncCountOk returns a tuple with the AwsLambdaFuncCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetAwsLambdaFuncCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsLambdaFuncCount.Get(), o.AwsLambdaFuncCount.IsSet()
}

// HasAwsLambdaFuncCount returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasAwsLambdaFuncCount() bool {
	if o != nil && o.AwsLambdaFuncCount.IsSet() {
		return true
	}

	return false
}

// SetAwsLambdaFuncCount gets a reference to the given NullableInt64 and assigns it to the AwsLambdaFuncCount field.
func (o *UsageSummaryDateOrg) SetAwsLambdaFuncCount(v int64) {
	o.AwsLambdaFuncCount.Set(&v)
}

// SetAwsLambdaFuncCountNil sets the value for AwsLambdaFuncCount to be an explicit nil
func (o *UsageSummaryDateOrg) SetAwsLambdaFuncCountNil() {
	o.AwsLambdaFuncCount.Set(nil)
}

// UnsetAwsLambdaFuncCount ensures that no value is present for AwsLambdaFuncCount, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetAwsLambdaFuncCount() {
	o.AwsLambdaFuncCount.Unset()
}

// GetAwsLambdaInvocationsSum returns the AwsLambdaInvocationsSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetAwsLambdaInvocationsSum() int64 {
	if o == nil || o.AwsLambdaInvocationsSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AwsLambdaInvocationsSum.Get()
}

// GetAwsLambdaInvocationsSumOk returns a tuple with the AwsLambdaInvocationsSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetAwsLambdaInvocationsSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AwsLambdaInvocationsSum.Get(), o.AwsLambdaInvocationsSum.IsSet()
}

// HasAwsLambdaInvocationsSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasAwsLambdaInvocationsSum() bool {
	if o != nil && o.AwsLambdaInvocationsSum.IsSet() {
		return true
	}

	return false
}

// SetAwsLambdaInvocationsSum gets a reference to the given NullableInt64 and assigns it to the AwsLambdaInvocationsSum field.
func (o *UsageSummaryDateOrg) SetAwsLambdaInvocationsSum(v int64) {
	o.AwsLambdaInvocationsSum.Set(&v)
}

// SetAwsLambdaInvocationsSumNil sets the value for AwsLambdaInvocationsSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetAwsLambdaInvocationsSumNil() {
	o.AwsLambdaInvocationsSum.Set(nil)
}

// UnsetAwsLambdaInvocationsSum ensures that no value is present for AwsLambdaInvocationsSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetAwsLambdaInvocationsSum() {
	o.AwsLambdaInvocationsSum.Unset()
}

// GetAzureAppServiceTop99p returns the AzureAppServiceTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetAzureAppServiceTop99p() int64 {
	if o == nil || o.AzureAppServiceTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.AzureAppServiceTop99p.Get()
}

// GetAzureAppServiceTop99pOk returns a tuple with the AzureAppServiceTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetAzureAppServiceTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.AzureAppServiceTop99p.Get(), o.AzureAppServiceTop99p.IsSet()
}

// HasAzureAppServiceTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasAzureAppServiceTop99p() bool {
	if o != nil && o.AzureAppServiceTop99p.IsSet() {
		return true
	}

	return false
}

// SetAzureAppServiceTop99p gets a reference to the given NullableInt64 and assigns it to the AzureAppServiceTop99p field.
func (o *UsageSummaryDateOrg) SetAzureAppServiceTop99p(v int64) {
	o.AzureAppServiceTop99p.Set(&v)
}

// SetAzureAppServiceTop99pNil sets the value for AzureAppServiceTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetAzureAppServiceTop99pNil() {
	o.AzureAppServiceTop99p.Set(nil)
}

// UnsetAzureAppServiceTop99p ensures that no value is present for AzureAppServiceTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetAzureAppServiceTop99p() {
	o.AzureAppServiceTop99p.Unset()
}

// GetBillableIngestedBytesSum returns the BillableIngestedBytesSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetBillableIngestedBytesSum() int64 {
	if o == nil || o.BillableIngestedBytesSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.BillableIngestedBytesSum.Get()
}

// GetBillableIngestedBytesSumOk returns a tuple with the BillableIngestedBytesSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetBillableIngestedBytesSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillableIngestedBytesSum.Get(), o.BillableIngestedBytesSum.IsSet()
}

// HasBillableIngestedBytesSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasBillableIngestedBytesSum() bool {
	if o != nil && o.BillableIngestedBytesSum.IsSet() {
		return true
	}

	return false
}

// SetBillableIngestedBytesSum gets a reference to the given NullableInt64 and assigns it to the BillableIngestedBytesSum field.
func (o *UsageSummaryDateOrg) SetBillableIngestedBytesSum(v int64) {
	o.BillableIngestedBytesSum.Set(&v)
}

// SetBillableIngestedBytesSumNil sets the value for BillableIngestedBytesSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetBillableIngestedBytesSumNil() {
	o.BillableIngestedBytesSum.Set(nil)
}

// UnsetBillableIngestedBytesSum ensures that no value is present for BillableIngestedBytesSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetBillableIngestedBytesSum() {
	o.BillableIngestedBytesSum.Unset()
}

// GetComplianceContainerAggSum returns the ComplianceContainerAggSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetComplianceContainerAggSum() int64 {
	if o == nil || o.ComplianceContainerAggSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ComplianceContainerAggSum.Get()
}

// GetComplianceContainerAggSumOk returns a tuple with the ComplianceContainerAggSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetComplianceContainerAggSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComplianceContainerAggSum.Get(), o.ComplianceContainerAggSum.IsSet()
}

// HasComplianceContainerAggSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasComplianceContainerAggSum() bool {
	if o != nil && o.ComplianceContainerAggSum.IsSet() {
		return true
	}

	return false
}

// SetComplianceContainerAggSum gets a reference to the given NullableInt64 and assigns it to the ComplianceContainerAggSum field.
func (o *UsageSummaryDateOrg) SetComplianceContainerAggSum(v int64) {
	o.ComplianceContainerAggSum.Set(&v)
}

// SetComplianceContainerAggSumNil sets the value for ComplianceContainerAggSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetComplianceContainerAggSumNil() {
	o.ComplianceContainerAggSum.Set(nil)
}

// UnsetComplianceContainerAggSum ensures that no value is present for ComplianceContainerAggSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetComplianceContainerAggSum() {
	o.ComplianceContainerAggSum.Unset()
}

// GetComplianceHostAggSum returns the ComplianceHostAggSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetComplianceHostAggSum() int64 {
	if o == nil || o.ComplianceHostAggSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ComplianceHostAggSum.Get()
}

// GetComplianceHostAggSumOk returns a tuple with the ComplianceHostAggSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetComplianceHostAggSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ComplianceHostAggSum.Get(), o.ComplianceHostAggSum.IsSet()
}

// HasComplianceHostAggSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasComplianceHostAggSum() bool {
	if o != nil && o.ComplianceHostAggSum.IsSet() {
		return true
	}

	return false
}

// SetComplianceHostAggSum gets a reference to the given NullableInt64 and assigns it to the ComplianceHostAggSum field.
func (o *UsageSummaryDateOrg) SetComplianceHostAggSum(v int64) {
	o.ComplianceHostAggSum.Set(&v)
}

// SetComplianceHostAggSumNil sets the value for ComplianceHostAggSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetComplianceHostAggSumNil() {
	o.ComplianceHostAggSum.Set(nil)
}

// UnsetComplianceHostAggSum ensures that no value is present for ComplianceHostAggSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetComplianceHostAggSum() {
	o.ComplianceHostAggSum.Unset()
}

// GetContainerAvg returns the ContainerAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetContainerAvg() int64 {
	if o == nil || o.ContainerAvg.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ContainerAvg.Get()
}

// GetContainerAvgOk returns a tuple with the ContainerAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetContainerAvgOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerAvg.Get(), o.ContainerAvg.IsSet()
}

// HasContainerAvg returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasContainerAvg() bool {
	if o != nil && o.ContainerAvg.IsSet() {
		return true
	}

	return false
}

// SetContainerAvg gets a reference to the given NullableInt64 and assigns it to the ContainerAvg field.
func (o *UsageSummaryDateOrg) SetContainerAvg(v int64) {
	o.ContainerAvg.Set(&v)
}

// SetContainerAvgNil sets the value for ContainerAvg to be an explicit nil
func (o *UsageSummaryDateOrg) SetContainerAvgNil() {
	o.ContainerAvg.Set(nil)
}

// UnsetContainerAvg ensures that no value is present for ContainerAvg, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetContainerAvg() {
	o.ContainerAvg.Unset()
}

// GetContainerHwm returns the ContainerHwm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetContainerHwm() int64 {
	if o == nil || o.ContainerHwm.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ContainerHwm.Get()
}

// GetContainerHwmOk returns a tuple with the ContainerHwm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetContainerHwmOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerHwm.Get(), o.ContainerHwm.IsSet()
}

// HasContainerHwm returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasContainerHwm() bool {
	if o != nil && o.ContainerHwm.IsSet() {
		return true
	}

	return false
}

// SetContainerHwm gets a reference to the given NullableInt64 and assigns it to the ContainerHwm field.
func (o *UsageSummaryDateOrg) SetContainerHwm(v int64) {
	o.ContainerHwm.Set(&v)
}

// SetContainerHwmNil sets the value for ContainerHwm to be an explicit nil
func (o *UsageSummaryDateOrg) SetContainerHwmNil() {
	o.ContainerHwm.Set(nil)
}

// UnsetContainerHwm ensures that no value is present for ContainerHwm, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetContainerHwm() {
	o.ContainerHwm.Unset()
}

// GetCustomTsAvg returns the CustomTsAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetCustomTsAvg() int64 {
	if o == nil || o.CustomTsAvg.Get() == nil {
		var ret int64
		return ret
	}
	return *o.CustomTsAvg.Get()
}

// GetCustomTsAvgOk returns a tuple with the CustomTsAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetCustomTsAvgOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomTsAvg.Get(), o.CustomTsAvg.IsSet()
}

// HasCustomTsAvg returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasCustomTsAvg() bool {
	if o != nil && o.CustomTsAvg.IsSet() {
		return true
	}

	return false
}

// SetCustomTsAvg gets a reference to the given NullableInt64 and assigns it to the CustomTsAvg field.
func (o *UsageSummaryDateOrg) SetCustomTsAvg(v int64) {
	o.CustomTsAvg.Set(&v)
}

// SetCustomTsAvgNil sets the value for CustomTsAvg to be an explicit nil
func (o *UsageSummaryDateOrg) SetCustomTsAvgNil() {
	o.CustomTsAvg.Set(nil)
}

// UnsetCustomTsAvg ensures that no value is present for CustomTsAvg, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetCustomTsAvg() {
	o.CustomTsAvg.Unset()
}

// GetFargateTasksCountAvg returns the FargateTasksCountAvg field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetFargateTasksCountAvg() int64 {
	if o == nil || o.FargateTasksCountAvg.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FargateTasksCountAvg.Get()
}

// GetFargateTasksCountAvgOk returns a tuple with the FargateTasksCountAvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetFargateTasksCountAvgOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FargateTasksCountAvg.Get(), o.FargateTasksCountAvg.IsSet()
}

// HasFargateTasksCountAvg returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasFargateTasksCountAvg() bool {
	if o != nil && o.FargateTasksCountAvg.IsSet() {
		return true
	}

	return false
}

// SetFargateTasksCountAvg gets a reference to the given NullableInt64 and assigns it to the FargateTasksCountAvg field.
func (o *UsageSummaryDateOrg) SetFargateTasksCountAvg(v int64) {
	o.FargateTasksCountAvg.Set(&v)
}

// SetFargateTasksCountAvgNil sets the value for FargateTasksCountAvg to be an explicit nil
func (o *UsageSummaryDateOrg) SetFargateTasksCountAvgNil() {
	o.FargateTasksCountAvg.Set(nil)
}

// UnsetFargateTasksCountAvg ensures that no value is present for FargateTasksCountAvg, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetFargateTasksCountAvg() {
	o.FargateTasksCountAvg.Unset()
}

// GetFargateTasksCountHwm returns the FargateTasksCountHwm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetFargateTasksCountHwm() int64 {
	if o == nil || o.FargateTasksCountHwm.Get() == nil {
		var ret int64
		return ret
	}
	return *o.FargateTasksCountHwm.Get()
}

// GetFargateTasksCountHwmOk returns a tuple with the FargateTasksCountHwm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetFargateTasksCountHwmOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.FargateTasksCountHwm.Get(), o.FargateTasksCountHwm.IsSet()
}

// HasFargateTasksCountHwm returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasFargateTasksCountHwm() bool {
	if o != nil && o.FargateTasksCountHwm.IsSet() {
		return true
	}

	return false
}

// SetFargateTasksCountHwm gets a reference to the given NullableInt64 and assigns it to the FargateTasksCountHwm field.
func (o *UsageSummaryDateOrg) SetFargateTasksCountHwm(v int64) {
	o.FargateTasksCountHwm.Set(&v)
}

// SetFargateTasksCountHwmNil sets the value for FargateTasksCountHwm to be an explicit nil
func (o *UsageSummaryDateOrg) SetFargateTasksCountHwmNil() {
	o.FargateTasksCountHwm.Set(nil)
}

// UnsetFargateTasksCountHwm ensures that no value is present for FargateTasksCountHwm, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetFargateTasksCountHwm() {
	o.FargateTasksCountHwm.Unset()
}

// GetGcpHostTop99p returns the GcpHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetGcpHostTop99p() int64 {
	if o == nil || o.GcpHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.GcpHostTop99p.Get()
}

// GetGcpHostTop99pOk returns a tuple with the GcpHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetGcpHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.GcpHostTop99p.Get(), o.GcpHostTop99p.IsSet()
}

// HasGcpHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasGcpHostTop99p() bool {
	if o != nil && o.GcpHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetGcpHostTop99p gets a reference to the given NullableInt64 and assigns it to the GcpHostTop99p field.
func (o *UsageSummaryDateOrg) SetGcpHostTop99p(v int64) {
	o.GcpHostTop99p.Set(&v)
}

// SetGcpHostTop99pNil sets the value for GcpHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetGcpHostTop99pNil() {
	o.GcpHostTop99p.Set(nil)
}

// UnsetGcpHostTop99p ensures that no value is present for GcpHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetGcpHostTop99p() {
	o.GcpHostTop99p.Unset()
}

// GetHerokuHostTop99p returns the HerokuHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetHerokuHostTop99p() int64 {
	if o == nil || o.HerokuHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.HerokuHostTop99p.Get()
}

// GetHerokuHostTop99pOk returns a tuple with the HerokuHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetHerokuHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.HerokuHostTop99p.Get(), o.HerokuHostTop99p.IsSet()
}

// HasHerokuHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasHerokuHostTop99p() bool {
	if o != nil && o.HerokuHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetHerokuHostTop99p gets a reference to the given NullableInt64 and assigns it to the HerokuHostTop99p field.
func (o *UsageSummaryDateOrg) SetHerokuHostTop99p(v int64) {
	o.HerokuHostTop99p.Set(&v)
}

// SetHerokuHostTop99pNil sets the value for HerokuHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetHerokuHostTop99pNil() {
	o.HerokuHostTop99p.Set(nil)
}

// UnsetHerokuHostTop99p ensures that no value is present for HerokuHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetHerokuHostTop99p() {
	o.HerokuHostTop99p.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UsageSummaryDateOrg) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageSummaryDateOrg) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UsageSummaryDateOrg) SetId(v string) {
	o.Id = &v
}

// GetIncidentManagementMonthlyActiveUsersHwm returns the IncidentManagementMonthlyActiveUsersHwm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetIncidentManagementMonthlyActiveUsersHwm() int64 {
	if o == nil || o.IncidentManagementMonthlyActiveUsersHwm.Get() == nil {
		var ret int64
		return ret
	}
	return *o.IncidentManagementMonthlyActiveUsersHwm.Get()
}

// GetIncidentManagementMonthlyActiveUsersHwmOk returns a tuple with the IncidentManagementMonthlyActiveUsersHwm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetIncidentManagementMonthlyActiveUsersHwmOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncidentManagementMonthlyActiveUsersHwm.Get(), o.IncidentManagementMonthlyActiveUsersHwm.IsSet()
}

// HasIncidentManagementMonthlyActiveUsersHwm returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasIncidentManagementMonthlyActiveUsersHwm() bool {
	if o != nil && o.IncidentManagementMonthlyActiveUsersHwm.IsSet() {
		return true
	}

	return false
}

// SetIncidentManagementMonthlyActiveUsersHwm gets a reference to the given NullableInt64 and assigns it to the IncidentManagementMonthlyActiveUsersHwm field.
func (o *UsageSummaryDateOrg) SetIncidentManagementMonthlyActiveUsersHwm(v int64) {
	o.IncidentManagementMonthlyActiveUsersHwm.Set(&v)
}

// SetIncidentManagementMonthlyActiveUsersHwmNil sets the value for IncidentManagementMonthlyActiveUsersHwm to be an explicit nil
func (o *UsageSummaryDateOrg) SetIncidentManagementMonthlyActiveUsersHwmNil() {
	o.IncidentManagementMonthlyActiveUsersHwm.Set(nil)
}

// UnsetIncidentManagementMonthlyActiveUsersHwm ensures that no value is present for IncidentManagementMonthlyActiveUsersHwm, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetIncidentManagementMonthlyActiveUsersHwm() {
	o.IncidentManagementMonthlyActiveUsersHwm.Unset()
}

// GetIndexedEventsCountSum returns the IndexedEventsCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetIndexedEventsCountSum() int64 {
	if o == nil || o.IndexedEventsCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.IndexedEventsCountSum.Get()
}

// GetIndexedEventsCountSumOk returns a tuple with the IndexedEventsCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetIndexedEventsCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IndexedEventsCountSum.Get(), o.IndexedEventsCountSum.IsSet()
}

// HasIndexedEventsCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasIndexedEventsCountSum() bool {
	if o != nil && o.IndexedEventsCountSum.IsSet() {
		return true
	}

	return false
}

// SetIndexedEventsCountSum gets a reference to the given NullableInt64 and assigns it to the IndexedEventsCountSum field.
func (o *UsageSummaryDateOrg) SetIndexedEventsCountSum(v int64) {
	o.IndexedEventsCountSum.Set(&v)
}

// SetIndexedEventsCountSumNil sets the value for IndexedEventsCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetIndexedEventsCountSumNil() {
	o.IndexedEventsCountSum.Set(nil)
}

// UnsetIndexedEventsCountSum ensures that no value is present for IndexedEventsCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetIndexedEventsCountSum() {
	o.IndexedEventsCountSum.Unset()
}

// GetInfraHostTop99p returns the InfraHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetInfraHostTop99p() int64 {
	if o == nil || o.InfraHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.InfraHostTop99p.Get()
}

// GetInfraHostTop99pOk returns a tuple with the InfraHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetInfraHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.InfraHostTop99p.Get(), o.InfraHostTop99p.IsSet()
}

// HasInfraHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasInfraHostTop99p() bool {
	if o != nil && o.InfraHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetInfraHostTop99p gets a reference to the given NullableInt64 and assigns it to the InfraHostTop99p field.
func (o *UsageSummaryDateOrg) SetInfraHostTop99p(v int64) {
	o.InfraHostTop99p.Set(&v)
}

// SetInfraHostTop99pNil sets the value for InfraHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetInfraHostTop99pNil() {
	o.InfraHostTop99p.Set(nil)
}

// UnsetInfraHostTop99p ensures that no value is present for InfraHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetInfraHostTop99p() {
	o.InfraHostTop99p.Unset()
}

// GetIngestedEventsBytesSum returns the IngestedEventsBytesSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetIngestedEventsBytesSum() int64 {
	if o == nil || o.IngestedEventsBytesSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.IngestedEventsBytesSum.Get()
}

// GetIngestedEventsBytesSumOk returns a tuple with the IngestedEventsBytesSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetIngestedEventsBytesSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IngestedEventsBytesSum.Get(), o.IngestedEventsBytesSum.IsSet()
}

// HasIngestedEventsBytesSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasIngestedEventsBytesSum() bool {
	if o != nil && o.IngestedEventsBytesSum.IsSet() {
		return true
	}

	return false
}

// SetIngestedEventsBytesSum gets a reference to the given NullableInt64 and assigns it to the IngestedEventsBytesSum field.
func (o *UsageSummaryDateOrg) SetIngestedEventsBytesSum(v int64) {
	o.IngestedEventsBytesSum.Set(&v)
}

// SetIngestedEventsBytesSumNil sets the value for IngestedEventsBytesSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetIngestedEventsBytesSumNil() {
	o.IngestedEventsBytesSum.Set(nil)
}

// UnsetIngestedEventsBytesSum ensures that no value is present for IngestedEventsBytesSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetIngestedEventsBytesSum() {
	o.IngestedEventsBytesSum.Unset()
}

// GetIotDeviceAggSum returns the IotDeviceAggSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetIotDeviceAggSum() int64 {
	if o == nil || o.IotDeviceAggSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.IotDeviceAggSum.Get()
}

// GetIotDeviceAggSumOk returns a tuple with the IotDeviceAggSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetIotDeviceAggSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IotDeviceAggSum.Get(), o.IotDeviceAggSum.IsSet()
}

// HasIotDeviceAggSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasIotDeviceAggSum() bool {
	if o != nil && o.IotDeviceAggSum.IsSet() {
		return true
	}

	return false
}

// SetIotDeviceAggSum gets a reference to the given NullableInt64 and assigns it to the IotDeviceAggSum field.
func (o *UsageSummaryDateOrg) SetIotDeviceAggSum(v int64) {
	o.IotDeviceAggSum.Set(&v)
}

// SetIotDeviceAggSumNil sets the value for IotDeviceAggSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetIotDeviceAggSumNil() {
	o.IotDeviceAggSum.Set(nil)
}

// UnsetIotDeviceAggSum ensures that no value is present for IotDeviceAggSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetIotDeviceAggSum() {
	o.IotDeviceAggSum.Unset()
}

// GetIotDeviceTop99pSum returns the IotDeviceTop99pSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetIotDeviceTop99pSum() int64 {
	if o == nil || o.IotDeviceTop99pSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.IotDeviceTop99pSum.Get()
}

// GetIotDeviceTop99pSumOk returns a tuple with the IotDeviceTop99pSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetIotDeviceTop99pSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.IotDeviceTop99pSum.Get(), o.IotDeviceTop99pSum.IsSet()
}

// HasIotDeviceTop99pSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasIotDeviceTop99pSum() bool {
	if o != nil && o.IotDeviceTop99pSum.IsSet() {
		return true
	}

	return false
}

// SetIotDeviceTop99pSum gets a reference to the given NullableInt64 and assigns it to the IotDeviceTop99pSum field.
func (o *UsageSummaryDateOrg) SetIotDeviceTop99pSum(v int64) {
	o.IotDeviceTop99pSum.Set(&v)
}

// SetIotDeviceTop99pSumNil sets the value for IotDeviceTop99pSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetIotDeviceTop99pSumNil() {
	o.IotDeviceTop99pSum.Set(nil)
}

// UnsetIotDeviceTop99pSum ensures that no value is present for IotDeviceTop99pSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetIotDeviceTop99pSum() {
	o.IotDeviceTop99pSum.Unset()
}

// GetMobileRumSessionCountAndroidSum returns the MobileRumSessionCountAndroidSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetMobileRumSessionCountAndroidSum() int64 {
	if o == nil || o.MobileRumSessionCountAndroidSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MobileRumSessionCountAndroidSum.Get()
}

// GetMobileRumSessionCountAndroidSumOk returns a tuple with the MobileRumSessionCountAndroidSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetMobileRumSessionCountAndroidSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileRumSessionCountAndroidSum.Get(), o.MobileRumSessionCountAndroidSum.IsSet()
}

// HasMobileRumSessionCountAndroidSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasMobileRumSessionCountAndroidSum() bool {
	if o != nil && o.MobileRumSessionCountAndroidSum.IsSet() {
		return true
	}

	return false
}

// SetMobileRumSessionCountAndroidSum gets a reference to the given NullableInt64 and assigns it to the MobileRumSessionCountAndroidSum field.
func (o *UsageSummaryDateOrg) SetMobileRumSessionCountAndroidSum(v int64) {
	o.MobileRumSessionCountAndroidSum.Set(&v)
}

// SetMobileRumSessionCountAndroidSumNil sets the value for MobileRumSessionCountAndroidSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetMobileRumSessionCountAndroidSumNil() {
	o.MobileRumSessionCountAndroidSum.Set(nil)
}

// UnsetMobileRumSessionCountAndroidSum ensures that no value is present for MobileRumSessionCountAndroidSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetMobileRumSessionCountAndroidSum() {
	o.MobileRumSessionCountAndroidSum.Unset()
}

// GetMobileRumSessionCountIosSum returns the MobileRumSessionCountIosSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetMobileRumSessionCountIosSum() int64 {
	if o == nil || o.MobileRumSessionCountIosSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MobileRumSessionCountIosSum.Get()
}

// GetMobileRumSessionCountIosSumOk returns a tuple with the MobileRumSessionCountIosSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetMobileRumSessionCountIosSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileRumSessionCountIosSum.Get(), o.MobileRumSessionCountIosSum.IsSet()
}

// HasMobileRumSessionCountIosSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasMobileRumSessionCountIosSum() bool {
	if o != nil && o.MobileRumSessionCountIosSum.IsSet() {
		return true
	}

	return false
}

// SetMobileRumSessionCountIosSum gets a reference to the given NullableInt64 and assigns it to the MobileRumSessionCountIosSum field.
func (o *UsageSummaryDateOrg) SetMobileRumSessionCountIosSum(v int64) {
	o.MobileRumSessionCountIosSum.Set(&v)
}

// SetMobileRumSessionCountIosSumNil sets the value for MobileRumSessionCountIosSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetMobileRumSessionCountIosSumNil() {
	o.MobileRumSessionCountIosSum.Set(nil)
}

// UnsetMobileRumSessionCountIosSum ensures that no value is present for MobileRumSessionCountIosSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetMobileRumSessionCountIosSum() {
	o.MobileRumSessionCountIosSum.Unset()
}

// GetMobileRumSessionCountSum returns the MobileRumSessionCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetMobileRumSessionCountSum() int64 {
	if o == nil || o.MobileRumSessionCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.MobileRumSessionCountSum.Get()
}

// GetMobileRumSessionCountSumOk returns a tuple with the MobileRumSessionCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetMobileRumSessionCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.MobileRumSessionCountSum.Get(), o.MobileRumSessionCountSum.IsSet()
}

// HasMobileRumSessionCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasMobileRumSessionCountSum() bool {
	if o != nil && o.MobileRumSessionCountSum.IsSet() {
		return true
	}

	return false
}

// SetMobileRumSessionCountSum gets a reference to the given NullableInt64 and assigns it to the MobileRumSessionCountSum field.
func (o *UsageSummaryDateOrg) SetMobileRumSessionCountSum(v int64) {
	o.MobileRumSessionCountSum.Set(&v)
}

// SetMobileRumSessionCountSumNil sets the value for MobileRumSessionCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetMobileRumSessionCountSumNil() {
	o.MobileRumSessionCountSum.Set(nil)
}

// UnsetMobileRumSessionCountSum ensures that no value is present for MobileRumSessionCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetMobileRumSessionCountSum() {
	o.MobileRumSessionCountSum.Unset()
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UsageSummaryDateOrg) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageSummaryDateOrg) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UsageSummaryDateOrg) SetName(v string) {
	o.Name = &v
}

// GetNetflowIndexedEventsCountSum returns the NetflowIndexedEventsCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetNetflowIndexedEventsCountSum() int64 {
	if o == nil || o.NetflowIndexedEventsCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NetflowIndexedEventsCountSum.Get()
}

// GetNetflowIndexedEventsCountSumOk returns a tuple with the NetflowIndexedEventsCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetNetflowIndexedEventsCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetflowIndexedEventsCountSum.Get(), o.NetflowIndexedEventsCountSum.IsSet()
}

// HasNetflowIndexedEventsCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasNetflowIndexedEventsCountSum() bool {
	if o != nil && o.NetflowIndexedEventsCountSum.IsSet() {
		return true
	}

	return false
}

// SetNetflowIndexedEventsCountSum gets a reference to the given NullableInt64 and assigns it to the NetflowIndexedEventsCountSum field.
func (o *UsageSummaryDateOrg) SetNetflowIndexedEventsCountSum(v int64) {
	o.NetflowIndexedEventsCountSum.Set(&v)
}

// SetNetflowIndexedEventsCountSumNil sets the value for NetflowIndexedEventsCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetNetflowIndexedEventsCountSumNil() {
	o.NetflowIndexedEventsCountSum.Set(nil)
}

// UnsetNetflowIndexedEventsCountSum ensures that no value is present for NetflowIndexedEventsCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetNetflowIndexedEventsCountSum() {
	o.NetflowIndexedEventsCountSum.Unset()
}

// GetNpmHostTop99p returns the NpmHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetNpmHostTop99p() int64 {
	if o == nil || o.NpmHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.NpmHostTop99p.Get()
}

// GetNpmHostTop99pOk returns a tuple with the NpmHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetNpmHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.NpmHostTop99p.Get(), o.NpmHostTop99p.IsSet()
}

// HasNpmHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasNpmHostTop99p() bool {
	if o != nil && o.NpmHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetNpmHostTop99p gets a reference to the given NullableInt64 and assigns it to the NpmHostTop99p field.
func (o *UsageSummaryDateOrg) SetNpmHostTop99p(v int64) {
	o.NpmHostTop99p.Set(&v)
}

// SetNpmHostTop99pNil sets the value for NpmHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetNpmHostTop99pNil() {
	o.NpmHostTop99p.Set(nil)
}

// UnsetNpmHostTop99p ensures that no value is present for NpmHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetNpmHostTop99p() {
	o.NpmHostTop99p.Unset()
}

// GetOpentelemetryHostTop99p returns the OpentelemetryHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetOpentelemetryHostTop99p() int64 {
	if o == nil || o.OpentelemetryHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.OpentelemetryHostTop99p.Get()
}

// GetOpentelemetryHostTop99pOk returns a tuple with the OpentelemetryHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetOpentelemetryHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpentelemetryHostTop99p.Get(), o.OpentelemetryHostTop99p.IsSet()
}

// HasOpentelemetryHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasOpentelemetryHostTop99p() bool {
	if o != nil && o.OpentelemetryHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetOpentelemetryHostTop99p gets a reference to the given NullableInt64 and assigns it to the OpentelemetryHostTop99p field.
func (o *UsageSummaryDateOrg) SetOpentelemetryHostTop99p(v int64) {
	o.OpentelemetryHostTop99p.Set(&v)
}

// SetOpentelemetryHostTop99pNil sets the value for OpentelemetryHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetOpentelemetryHostTop99pNil() {
	o.OpentelemetryHostTop99p.Set(nil)
}

// UnsetOpentelemetryHostTop99p ensures that no value is present for OpentelemetryHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetOpentelemetryHostTop99p() {
	o.OpentelemetryHostTop99p.Unset()
}

// GetProfilingHostTop99p returns the ProfilingHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetProfilingHostTop99p() int64 {
	if o == nil || o.ProfilingHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.ProfilingHostTop99p.Get()
}

// GetProfilingHostTop99pOk returns a tuple with the ProfilingHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetProfilingHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProfilingHostTop99p.Get(), o.ProfilingHostTop99p.IsSet()
}

// HasProfilingHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasProfilingHostTop99p() bool {
	if o != nil && o.ProfilingHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetProfilingHostTop99p gets a reference to the given NullableInt64 and assigns it to the ProfilingHostTop99p field.
func (o *UsageSummaryDateOrg) SetProfilingHostTop99p(v int64) {
	o.ProfilingHostTop99p.Set(&v)
}

// SetProfilingHostTop99pNil sets the value for ProfilingHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetProfilingHostTop99pNil() {
	o.ProfilingHostTop99p.Set(nil)
}

// UnsetProfilingHostTop99p ensures that no value is present for ProfilingHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetProfilingHostTop99p() {
	o.ProfilingHostTop99p.Unset()
}

// GetPublicId returns the PublicId field value if set, zero value otherwise.
func (o *UsageSummaryDateOrg) GetPublicId() string {
	if o == nil || o.PublicId == nil {
		var ret string
		return ret
	}
	return *o.PublicId
}

// GetPublicIdOk returns a tuple with the PublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsageSummaryDateOrg) GetPublicIdOk() (*string, bool) {
	if o == nil || o.PublicId == nil {
		return nil, false
	}
	return o.PublicId, true
}

// HasPublicId returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasPublicId() bool {
	if o != nil && o.PublicId != nil {
		return true
	}

	return false
}

// SetPublicId gets a reference to the given string and assigns it to the PublicId field.
func (o *UsageSummaryDateOrg) SetPublicId(v string) {
	o.PublicId = &v
}

// GetRumSessionCountSum returns the RumSessionCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetRumSessionCountSum() int64 {
	if o == nil || o.RumSessionCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RumSessionCountSum.Get()
}

// GetRumSessionCountSumOk returns a tuple with the RumSessionCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetRumSessionCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RumSessionCountSum.Get(), o.RumSessionCountSum.IsSet()
}

// HasRumSessionCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasRumSessionCountSum() bool {
	if o != nil && o.RumSessionCountSum.IsSet() {
		return true
	}

	return false
}

// SetRumSessionCountSum gets a reference to the given NullableInt64 and assigns it to the RumSessionCountSum field.
func (o *UsageSummaryDateOrg) SetRumSessionCountSum(v int64) {
	o.RumSessionCountSum.Set(&v)
}

// SetRumSessionCountSumNil sets the value for RumSessionCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetRumSessionCountSumNil() {
	o.RumSessionCountSum.Set(nil)
}

// UnsetRumSessionCountSum ensures that no value is present for RumSessionCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetRumSessionCountSum() {
	o.RumSessionCountSum.Unset()
}

// GetRumTotalSessionCountSum returns the RumTotalSessionCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetRumTotalSessionCountSum() int64 {
	if o == nil || o.RumTotalSessionCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.RumTotalSessionCountSum.Get()
}

// GetRumTotalSessionCountSumOk returns a tuple with the RumTotalSessionCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetRumTotalSessionCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.RumTotalSessionCountSum.Get(), o.RumTotalSessionCountSum.IsSet()
}

// HasRumTotalSessionCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasRumTotalSessionCountSum() bool {
	if o != nil && o.RumTotalSessionCountSum.IsSet() {
		return true
	}

	return false
}

// SetRumTotalSessionCountSum gets a reference to the given NullableInt64 and assigns it to the RumTotalSessionCountSum field.
func (o *UsageSummaryDateOrg) SetRumTotalSessionCountSum(v int64) {
	o.RumTotalSessionCountSum.Set(&v)
}

// SetRumTotalSessionCountSumNil sets the value for RumTotalSessionCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetRumTotalSessionCountSumNil() {
	o.RumTotalSessionCountSum.Set(nil)
}

// UnsetRumTotalSessionCountSum ensures that no value is present for RumTotalSessionCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetRumTotalSessionCountSum() {
	o.RumTotalSessionCountSum.Unset()
}

// GetSyntheticsBrowserCheckCallsCountSum returns the SyntheticsBrowserCheckCallsCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetSyntheticsBrowserCheckCallsCountSum() int64 {
	if o == nil || o.SyntheticsBrowserCheckCallsCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SyntheticsBrowserCheckCallsCountSum.Get()
}

// GetSyntheticsBrowserCheckCallsCountSumOk returns a tuple with the SyntheticsBrowserCheckCallsCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetSyntheticsBrowserCheckCallsCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyntheticsBrowserCheckCallsCountSum.Get(), o.SyntheticsBrowserCheckCallsCountSum.IsSet()
}

// HasSyntheticsBrowserCheckCallsCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasSyntheticsBrowserCheckCallsCountSum() bool {
	if o != nil && o.SyntheticsBrowserCheckCallsCountSum.IsSet() {
		return true
	}

	return false
}

// SetSyntheticsBrowserCheckCallsCountSum gets a reference to the given NullableInt64 and assigns it to the SyntheticsBrowserCheckCallsCountSum field.
func (o *UsageSummaryDateOrg) SetSyntheticsBrowserCheckCallsCountSum(v int64) {
	o.SyntheticsBrowserCheckCallsCountSum.Set(&v)
}

// SetSyntheticsBrowserCheckCallsCountSumNil sets the value for SyntheticsBrowserCheckCallsCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetSyntheticsBrowserCheckCallsCountSumNil() {
	o.SyntheticsBrowserCheckCallsCountSum.Set(nil)
}

// UnsetSyntheticsBrowserCheckCallsCountSum ensures that no value is present for SyntheticsBrowserCheckCallsCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetSyntheticsBrowserCheckCallsCountSum() {
	o.SyntheticsBrowserCheckCallsCountSum.Unset()
}

// GetSyntheticsCheckCallsCountSum returns the SyntheticsCheckCallsCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetSyntheticsCheckCallsCountSum() int64 {
	if o == nil || o.SyntheticsCheckCallsCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.SyntheticsCheckCallsCountSum.Get()
}

// GetSyntheticsCheckCallsCountSumOk returns a tuple with the SyntheticsCheckCallsCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetSyntheticsCheckCallsCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyntheticsCheckCallsCountSum.Get(), o.SyntheticsCheckCallsCountSum.IsSet()
}

// HasSyntheticsCheckCallsCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasSyntheticsCheckCallsCountSum() bool {
	if o != nil && o.SyntheticsCheckCallsCountSum.IsSet() {
		return true
	}

	return false
}

// SetSyntheticsCheckCallsCountSum gets a reference to the given NullableInt64 and assigns it to the SyntheticsCheckCallsCountSum field.
func (o *UsageSummaryDateOrg) SetSyntheticsCheckCallsCountSum(v int64) {
	o.SyntheticsCheckCallsCountSum.Set(&v)
}

// SetSyntheticsCheckCallsCountSumNil sets the value for SyntheticsCheckCallsCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetSyntheticsCheckCallsCountSumNil() {
	o.SyntheticsCheckCallsCountSum.Set(nil)
}

// UnsetSyntheticsCheckCallsCountSum ensures that no value is present for SyntheticsCheckCallsCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetSyntheticsCheckCallsCountSum() {
	o.SyntheticsCheckCallsCountSum.Unset()
}

// GetTraceSearchIndexedEventsCountSum returns the TraceSearchIndexedEventsCountSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetTraceSearchIndexedEventsCountSum() int64 {
	if o == nil || o.TraceSearchIndexedEventsCountSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TraceSearchIndexedEventsCountSum.Get()
}

// GetTraceSearchIndexedEventsCountSumOk returns a tuple with the TraceSearchIndexedEventsCountSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetTraceSearchIndexedEventsCountSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraceSearchIndexedEventsCountSum.Get(), o.TraceSearchIndexedEventsCountSum.IsSet()
}

// HasTraceSearchIndexedEventsCountSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasTraceSearchIndexedEventsCountSum() bool {
	if o != nil && o.TraceSearchIndexedEventsCountSum.IsSet() {
		return true
	}

	return false
}

// SetTraceSearchIndexedEventsCountSum gets a reference to the given NullableInt64 and assigns it to the TraceSearchIndexedEventsCountSum field.
func (o *UsageSummaryDateOrg) SetTraceSearchIndexedEventsCountSum(v int64) {
	o.TraceSearchIndexedEventsCountSum.Set(&v)
}

// SetTraceSearchIndexedEventsCountSumNil sets the value for TraceSearchIndexedEventsCountSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetTraceSearchIndexedEventsCountSumNil() {
	o.TraceSearchIndexedEventsCountSum.Set(nil)
}

// UnsetTraceSearchIndexedEventsCountSum ensures that no value is present for TraceSearchIndexedEventsCountSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetTraceSearchIndexedEventsCountSum() {
	o.TraceSearchIndexedEventsCountSum.Unset()
}

// GetTwolIngestedEventsBytesSum returns the TwolIngestedEventsBytesSum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetTwolIngestedEventsBytesSum() int64 {
	if o == nil || o.TwolIngestedEventsBytesSum.Get() == nil {
		var ret int64
		return ret
	}
	return *o.TwolIngestedEventsBytesSum.Get()
}

// GetTwolIngestedEventsBytesSumOk returns a tuple with the TwolIngestedEventsBytesSum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetTwolIngestedEventsBytesSumOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwolIngestedEventsBytesSum.Get(), o.TwolIngestedEventsBytesSum.IsSet()
}

// HasTwolIngestedEventsBytesSum returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasTwolIngestedEventsBytesSum() bool {
	if o != nil && o.TwolIngestedEventsBytesSum.IsSet() {
		return true
	}

	return false
}

// SetTwolIngestedEventsBytesSum gets a reference to the given NullableInt64 and assigns it to the TwolIngestedEventsBytesSum field.
func (o *UsageSummaryDateOrg) SetTwolIngestedEventsBytesSum(v int64) {
	o.TwolIngestedEventsBytesSum.Set(&v)
}

// SetTwolIngestedEventsBytesSumNil sets the value for TwolIngestedEventsBytesSum to be an explicit nil
func (o *UsageSummaryDateOrg) SetTwolIngestedEventsBytesSumNil() {
	o.TwolIngestedEventsBytesSum.Set(nil)
}

// UnsetTwolIngestedEventsBytesSum ensures that no value is present for TwolIngestedEventsBytesSum, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetTwolIngestedEventsBytesSum() {
	o.TwolIngestedEventsBytesSum.Unset()
}

// GetVsphereHostTop99p returns the VsphereHostTop99p field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsageSummaryDateOrg) GetVsphereHostTop99p() int64 {
	if o == nil || o.VsphereHostTop99p.Get() == nil {
		var ret int64
		return ret
	}
	return *o.VsphereHostTop99p.Get()
}

// GetVsphereHostTop99pOk returns a tuple with the VsphereHostTop99p field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsageSummaryDateOrg) GetVsphereHostTop99pOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.VsphereHostTop99p.Get(), o.VsphereHostTop99p.IsSet()
}

// HasVsphereHostTop99p returns a boolean if a field has been set.
func (o *UsageSummaryDateOrg) HasVsphereHostTop99p() bool {
	if o != nil && o.VsphereHostTop99p.IsSet() {
		return true
	}

	return false
}

// SetVsphereHostTop99p gets a reference to the given NullableInt64 and assigns it to the VsphereHostTop99p field.
func (o *UsageSummaryDateOrg) SetVsphereHostTop99p(v int64) {
	o.VsphereHostTop99p.Set(&v)
}

// SetVsphereHostTop99pNil sets the value for VsphereHostTop99p to be an explicit nil
func (o *UsageSummaryDateOrg) SetVsphereHostTop99pNil() {
	o.VsphereHostTop99p.Set(nil)
}

// UnsetVsphereHostTop99p ensures that no value is present for VsphereHostTop99p, not even an explicit nil
func (o *UsageSummaryDateOrg) UnsetVsphereHostTop99p() {
	o.VsphereHostTop99p.Unset()
}

func (o UsageSummaryDateOrg) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AgentHostTop99p.IsSet() {
		toSerialize["agent_host_top99p"] = o.AgentHostTop99p.Get()
	}
	if o.ApmAzureAppServiceHostTop99p.IsSet() {
		toSerialize["apm_azure_app_service_host_top99p"] = o.ApmAzureAppServiceHostTop99p.Get()
	}
	if o.ApmHostTop99p.IsSet() {
		toSerialize["apm_host_top99p"] = o.ApmHostTop99p.Get()
	}
	if o.AwsHostTop99p.IsSet() {
		toSerialize["aws_host_top99p"] = o.AwsHostTop99p.Get()
	}
	if o.AwsLambdaFuncCount.IsSet() {
		toSerialize["aws_lambda_func_count"] = o.AwsLambdaFuncCount.Get()
	}
	if o.AwsLambdaInvocationsSum.IsSet() {
		toSerialize["aws_lambda_invocations_sum"] = o.AwsLambdaInvocationsSum.Get()
	}
	if o.AzureAppServiceTop99p.IsSet() {
		toSerialize["azure_app_service_top99p"] = o.AzureAppServiceTop99p.Get()
	}
	if o.BillableIngestedBytesSum.IsSet() {
		toSerialize["billable_ingested_bytes_sum"] = o.BillableIngestedBytesSum.Get()
	}
	if o.ComplianceContainerAggSum.IsSet() {
		toSerialize["compliance_container_agg_sum"] = o.ComplianceContainerAggSum.Get()
	}
	if o.ComplianceHostAggSum.IsSet() {
		toSerialize["compliance_host_agg_sum"] = o.ComplianceHostAggSum.Get()
	}
	if o.ContainerAvg.IsSet() {
		toSerialize["container_avg"] = o.ContainerAvg.Get()
	}
	if o.ContainerHwm.IsSet() {
		toSerialize["container_hwm"] = o.ContainerHwm.Get()
	}
	if o.CustomTsAvg.IsSet() {
		toSerialize["custom_ts_avg"] = o.CustomTsAvg.Get()
	}
	if o.FargateTasksCountAvg.IsSet() {
		toSerialize["fargate_tasks_count_avg"] = o.FargateTasksCountAvg.Get()
	}
	if o.FargateTasksCountHwm.IsSet() {
		toSerialize["fargate_tasks_count_hwm"] = o.FargateTasksCountHwm.Get()
	}
	if o.GcpHostTop99p.IsSet() {
		toSerialize["gcp_host_top99p"] = o.GcpHostTop99p.Get()
	}
	if o.HerokuHostTop99p.IsSet() {
		toSerialize["heroku_host_top99p"] = o.HerokuHostTop99p.Get()
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IncidentManagementMonthlyActiveUsersHwm.IsSet() {
		toSerialize["incident_management_monthly_active_users_hwm"] = o.IncidentManagementMonthlyActiveUsersHwm.Get()
	}
	if o.IndexedEventsCountSum.IsSet() {
		toSerialize["indexed_events_count_sum"] = o.IndexedEventsCountSum.Get()
	}
	if o.InfraHostTop99p.IsSet() {
		toSerialize["infra_host_top99p"] = o.InfraHostTop99p.Get()
	}
	if o.IngestedEventsBytesSum.IsSet() {
		toSerialize["ingested_events_bytes_sum"] = o.IngestedEventsBytesSum.Get()
	}
	if o.IotDeviceAggSum.IsSet() {
		toSerialize["iot_device_agg_sum"] = o.IotDeviceAggSum.Get()
	}
	if o.IotDeviceTop99pSum.IsSet() {
		toSerialize["iot_device_top99p_sum"] = o.IotDeviceTop99pSum.Get()
	}
	if o.MobileRumSessionCountAndroidSum.IsSet() {
		toSerialize["mobile_rum_session_count_android_sum"] = o.MobileRumSessionCountAndroidSum.Get()
	}
	if o.MobileRumSessionCountIosSum.IsSet() {
		toSerialize["mobile_rum_session_count_ios_sum"] = o.MobileRumSessionCountIosSum.Get()
	}
	if o.MobileRumSessionCountSum.IsSet() {
		toSerialize["mobile_rum_session_count_sum"] = o.MobileRumSessionCountSum.Get()
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NetflowIndexedEventsCountSum.IsSet() {
		toSerialize["netflow_indexed_events_count_sum"] = o.NetflowIndexedEventsCountSum.Get()
	}
	if o.NpmHostTop99p.IsSet() {
		toSerialize["npm_host_top99p"] = o.NpmHostTop99p.Get()
	}
	if o.OpentelemetryHostTop99p.IsSet() {
		toSerialize["opentelemetry_host_top99p"] = o.OpentelemetryHostTop99p.Get()
	}
	if o.ProfilingHostTop99p.IsSet() {
		toSerialize["profiling_host_top99p"] = o.ProfilingHostTop99p.Get()
	}
	if o.PublicId != nil {
		toSerialize["public_id"] = o.PublicId
	}
	if o.RumSessionCountSum.IsSet() {
		toSerialize["rum_session_count_sum"] = o.RumSessionCountSum.Get()
	}
	if o.RumTotalSessionCountSum.IsSet() {
		toSerialize["rum_total_session_count_sum"] = o.RumTotalSessionCountSum.Get()
	}
	if o.SyntheticsBrowserCheckCallsCountSum.IsSet() {
		toSerialize["synthetics_browser_check_calls_count_sum"] = o.SyntheticsBrowserCheckCallsCountSum.Get()
	}
	if o.SyntheticsCheckCallsCountSum.IsSet() {
		toSerialize["synthetics_check_calls_count_sum"] = o.SyntheticsCheckCallsCountSum.Get()
	}
	if o.TraceSearchIndexedEventsCountSum.IsSet() {
		toSerialize["trace_search_indexed_events_count_sum"] = o.TraceSearchIndexedEventsCountSum.Get()
	}
	if o.TwolIngestedEventsBytesSum.IsSet() {
		toSerialize["twol_ingested_events_bytes_sum"] = o.TwolIngestedEventsBytesSum.Get()
	}
	if o.VsphereHostTop99p.IsSet() {
		toSerialize["vsphere_host_top99p"] = o.VsphereHostTop99p.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUsageSummaryDateOrg struct {
	value *UsageSummaryDateOrg
	isSet bool
}

func (v NullableUsageSummaryDateOrg) Get() *UsageSummaryDateOrg {
	return v.value
}

func (v *NullableUsageSummaryDateOrg) Set(val *UsageSummaryDateOrg) {
	v.value = val
	v.isSet = true
}

func (v NullableUsageSummaryDateOrg) IsSet() bool {
	return v.isSet
}

func (v *NullableUsageSummaryDateOrg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsageSummaryDateOrg(val *UsageSummaryDateOrg) *NullableUsageSummaryDateOrg {
	return &NullableUsageSummaryDateOrg{value: val, isSet: true}
}

func (v NullableUsageSummaryDateOrg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsageSummaryDateOrg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
